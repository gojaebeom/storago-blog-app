{"version":3,"sources":["pages/MobileHeader.js","pages/Header.js","Url.js","pages/ContentBox.js","pages/Admin.js","pages/Login.js","pages/ProjectStore.js","pages/ProjectEdit.js","App.js","serviceWorker.js","index.js"],"names":["MobileHeader","props","React","useState","anchorEl","setAnchorEl","handleClose","className","title","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","to","MenuItem","isLogged","loginCheck","Logout","Header","activeStyle","background","href","exact","adminInfo","url","ContentBox","projects","setProjects","ProjectAPI","useCallback","a","params","axios","get","base","console","log","useEffect","then","res","data","changeLiked","liked","put","total","toyTotal","appTotal","myTotal","explanation","map","key","down_url","download_url","video_url","img","comment","category","name","category_id","updated_at","isLiked","footer","ContentBoxChild","rel","target","src","alt","controls","width","type","download","alert","LikeButton","Admin","projectAPI","StoreButton","ProjectTable","projectRefresh","totalRefresh","style","margin","variant","color","classes","makeStyles","table","minWidth","useStyles","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","row","ProjectTableBody","height","borderRadius","EditButton","DestroyButton","clickDestroy","delete","Login","user_id","user_pw","log_state","log_Check","login","setLogin","loginAPI","post","changeValue","e","value","onSubmit","preventDefault","window","sessionStorage","setItem","htmlFor","onChange","ProjectEdit","match","success","setSuccess","fileName","file","project","setProject","projectAdd","formData","FormData","append","config","headers","files","rows","created_at","projectFind","projectUpdate","readOnly","App","loginInfo","setLoginInfo","setTotal","totalAPI","count","getItem","admin","logout","logCheck","clear","path","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.04f682bb.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {Link} from 'react-router-dom';\nimport '../css/menuButton.scss';\n\nconst MobileHeader = (props) => {\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleLogout = () => {\n        setAnchorEl(null);\n        props.loginCheck(false);\n    }\n\n\n    return (\n        <div className=\"menu-btn\" title=\"매뉴\">\n        <Button  aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n            <i className=\"ri-menu-2-line\"></i>\n        </Button>\n        <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n        >\n            <Link to=\"/\">\n                <MenuItem onClick={handleClose}>홈</MenuItem>\n            </Link>\n            <Link to=\"/toy\">\n                <MenuItem onClick={handleClose}>토이프로젝트</MenuItem>\n            </Link>\n            <Link to=\"/app\">\n                <MenuItem onClick={handleClose}>어플리케이션</MenuItem>\n            </Link>\n            <Link to=\"/odds\">\n                <MenuItem onClick={handleClose}>잡동사니</MenuItem>\n            </Link>\n            {\n                props.isLogged === false ?\n                <Link to=\"/login\">\n                    <MenuItem onClick={handleClose}>관리자 로그인</MenuItem>\n                </Link>\n                :\n                <div>\n                <Link to=\"/admin\">\n                    <MenuItem onClick={handleClose}>관리자 페이지</MenuItem>\n                </Link>\n                <MenuItem onClick={handleLogout}>로그아웃</MenuItem>\n                </div>\n            }\n            \n            \n        </Menu>\n        </div>\n    );\n};\n\nexport default MobileHeader;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport '../css/navigation.scss';\r\nimport MobileHeader from './MobileHeader';\r\n\r\n//header Component : 상단매뉴, 링크를 사용한 페이지 전환 기능\r\nfunction Header(props){\r\n\r\n    //NavLink 클릭시 적용될 스타일\r\n    const activeStyle ={\r\n        background:`#167be0`\r\n    }\r\n\r\n    return(\r\n        <nav className=\"navigation\">\r\n            <MobileHeader\r\n                isLogged={props.isLogged}\r\n                loginCheck={props.loginCheck}\r\n            />\r\n            <figure className=\"logo\">\r\n                <a href=\"http://storago.io:4000/welcome\" title=\"소개페이지 바로가기\">\r\n                    {/* <i className=\"ri-reactjs-fill\"></i> */}\r\n                    Storago.io\r\n                </a>\r\n            </figure>\r\n\r\n            <ul className=\"menus\">\r\n                <li className=\"menu\">\r\n                    <NavLink exact to=\"/\" activeStyle={activeStyle}>홈</NavLink>\r\n                </li>\r\n                <li className=\"menu\">\r\n                    <NavLink to=\"/toy\" activeStyle={activeStyle}>토이프로젝트</NavLink>\r\n                </li>\r\n                <li className=\"menu\">\r\n                    <NavLink to=\"/app\" activeStyle={activeStyle}>어플리케이션</NavLink>\r\n                </li>\r\n                <li className=\"menu\">\r\n                    <NavLink to=\"/odds\" activeStyle={activeStyle}>잡동사니</NavLink>\r\n                </li>\r\n            </ul>\r\n\r\n            <ul className=\"login-menus\">\r\n                {\r\n                    props.isLogged === false ? \r\n                    <li className=\"login-menu\">\r\n                        <NavLink to=\"/login\"  activeStyle={activeStyle}>\r\n                            Login\r\n                        </NavLink>\r\n                    </li>\r\n                    :\r\n                    <>\r\n                        <li className=\"login-menu\">    \r\n                            <NavLink to=\"/admin\" activeStyle={activeStyle}>관리자페이지</NavLink>    \r\n                        </li>\r\n                        <li className=\"login-menu log-drop\">\r\n                            <div className=\"login-user-wrap\">\r\n                                {props.adminInfo}\r\n                            </div>\r\n                            <div className=\"logout-wrap\">\r\n                                <Logout loginCheck={props.loginCheck}/>\r\n                            </div>          \r\n                        </li>\r\n                    </>\r\n                }  \r\n            </ul>\r\n        </nav>\r\n        \r\n    )\r\n}\r\n\r\nfunction Logout(props){\r\n\r\n    const handleLogout = ()=>{\r\n        props.loginCheck(false);\r\n    }\r\n\r\n    return(\r\n        <div onClick={handleLogout}>로그아웃</div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n","export const url = `http://storago.io:4000`;","import React, {useEffect, useState, useCallback} from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport '../css/contentBox.scss';\r\nimport '../css/totalBox.scss';\r\nimport '../css/explanationBox.scss';\r\nimport * as base from '../Url';\r\n\r\n/*****************  Home   ********************/\r\nexport default function ContentBox(props){\r\n    const [projects, setProjects] = useState('');\r\n    \r\n    const ProjectAPI = useCallback(async ()=>{\r\n        try{\r\n            if(props.params)  return await axios.get(`${base.url}/api/projects_join_category/${props.params}`)\r\n            else  return await axios.get(`${base.url}/api/projects_join_category`)      \r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    },[props.params]);\r\n\r\n    useEffect(()=>{\r\n        ProjectAPI().then(res=>{\r\n            setProjects(res.data);\r\n        });\r\n    },[setProjects, ProjectAPI]);\r\n\r\n\r\n    // const ProjectAPI = async ()=>{\r\n    //     try{\r\n    //         if(props.params)  return await axios.get(`${base.url}/api/projects_join_category/${props.params}`)\r\n    //         else  return await axios.get(`${base.url}/api/projects_join_category`)      \r\n    //     }catch(e){\r\n    //         console.log(e);\r\n    //     }\r\n    // }\r\n\r\n    const changeLiked = async (id, liked)=>{\r\n        await axios.put(`${base.url}/api/projects_like`,\r\n        liked===0 ? {id,liked:1} : {id,liked:0})\r\n        .then(res=>{\r\n            ProjectAPI().then(res=>{\r\n                setProjects(res.data);\r\n            });\r\n        })\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {\r\n                props.total ?\r\n                <div className=\"total-back-wrap\">\r\n                    <div className=\"total-wrap\">\r\n                        <p>{props.total.total}</p>\r\n                        <h1>총 게시물</h1>\r\n                    </div>\r\n                    <div className=\"total-wrap\">\r\n                        <p>{props.total.toyTotal}</p>\r\n                        <h1>토이프로젝트</h1>\r\n                    </div>\r\n                    <div className=\"total-wrap\">\r\n                        <p>{props.total.appTotal}</p>\r\n                        <h1>어플리케이션</h1>\r\n                    </div>\r\n                    <div className=\"total-wrap\">\r\n                        <p>{props.total.myTotal}</p>\r\n                        <h1>잡동사니</h1>\r\n                    </div>\r\n                </div>\r\n                : null  \r\n            }\r\n            {\r\n                props.explanation ? \r\n                <div className=\"explanation-wrap\">\r\n                    {props.explanation}\r\n                </div>\r\n                : null\r\n            }\r\n            {projects ?\r\n            projects.map(data=>{\r\n                return(\r\n                    <ContentBoxChild\r\n                        key={data.id}\r\n                        id={data.id}\r\n                        title={data.title}\r\n                        url={data.url}\r\n                        down_url={data.download_url}\r\n                        video_url={data.video_url}\r\n                        img={data.img}\r\n                        comment={data.comment}\r\n                        category={data.name}\r\n                        category_id={data.category_id}\r\n                        updated_at={data.updated_at}\r\n                        changeLiked={changeLiked}\r\n                        liked={data.isLiked}\r\n                    />\r\n                )\r\n            })\r\n        : \r\n        <p className=\"loading-wrap\">\r\n            <i className=\"ri-send-plane-2-fill\"></i>\r\n            데이터 로딩중...\r\n        </p>\r\n        }\r\n        {\r\n            props.footer ? <footer>{props.footer}</footer> : null\r\n        }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n/*****************  ContentBox    ********************/\r\nconst ContentBoxChild = (props) => {\r\n\r\n    const clickAlert= () =>{\r\n        alert('다운로드 받을 파일이 없습니다!');\r\n    }\r\n\r\n    return (\r\n        <div className=\"content-wrap\">\r\n        <div className=\"top-wrap\">\r\n            <div className=\"title-wrap\">\r\n                <span>{props.title}</span>\r\n            </div>\r\n            <div className=\"category-wrap\">\r\n                {\r\n                props.category_id === 1 &&\r\n                <Link to=\"/toy\">\r\n                    <i className=\"ri-attachment-2\"></i>{props.category}\r\n                </Link>\r\n                }\r\n                {\r\n                props.category_id === 2 &&\r\n                <Link to=\"/app\">\r\n                    <i className=\"ri-attachment-2\"></i>{props.category}\r\n                </Link>\r\n                }\r\n                {\r\n                props.category_id === 3 &&\r\n                <Link to=\"/odds\">\r\n                    <i className=\"ri-attachment-2\"></i>{props.category}\r\n                </Link>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"date-wrap\">{props.updated_at}</div>\r\n\r\n        <div className=\"comment-wrap\">\r\n            {props.comment}\r\n\r\n            <div className=\"link-wrap\">\r\n                <span><a href={props.url}  rel=\"noopener noreferrer\" target=\"_blank\">{props.url}</a></span>\r\n            </div>\r\n            \r\n        </div>\r\n        {\r\n            props.img ?\r\n            <div className=\"img-wrap\">\r\n                <img src={base.url+props.img} alt=\"img\"/>\r\n                \r\n            </div>  \r\n            : null\r\n        }\r\n        {\r\n        props.video_url ? \r\n            <div className=\"video-wrap\">\r\n                <video controls width=\"90%\">\r\n                    <source src={props.video_url} type=\"video/mp4\"/>\r\n                </video>\r\n            </div>\r\n            : null\r\n        }\r\n        <div className=\"bottom-wrap\">\r\n            <LikeButton \r\n                changeLiked={props.changeLiked} \r\n                liked={props.liked} \r\n                id={props.id}\r\n            />\r\n            { props.down_url ?\r\n                <a href={props.down_url} download>\r\n                    <i title=\"다운로드\" className=\"ri-download-cloud-fill\"></i>\r\n                </a>\r\n                :\r\n                <i title=\"다운로드\" className=\"ri-download-cloud-fill\" onClick={clickAlert}></i>\r\n            }\r\n            \r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nconst LikeButton = ({liked, changeLiked, id})=>{\r\n\r\n    const clickHeartBtn = () =>{\r\n        changeLiked(id, liked);\r\n    }\r\n\r\n    return(\r\n        <span title=\"마음만 받는 하트\" onClick={clickHeartBtn}>\r\n            { liked===0 ? <i className=\"ri-heart-fill\"></i>:<i className=\"ri-heart-add-fill\"></i> }\r\n        </span>\r\n    )\r\n}\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport * as base from '../Url';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nconst Admin = (props) => {\r\n\r\n    const [projects, setProjects] = useState('');\r\n\r\n    useEffect(()=>{\r\n        projectAPI().then(res=>{\r\n            setProjects(res.data);\r\n        });\r\n    },[setProjects]);\r\n\r\n    const projectAPI = async ()=>{\r\n        try{\r\n            return await axios.get(`${base.url}/api/projects`);\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const projectRefresh = ()=>{\r\n        projectAPI().then(res=>{\r\n            setProjects(res.data);\r\n        });\r\n    }\r\n\r\n\r\n    if(!props.isLogged) return <Redirect to=\"/\"/>\r\n    if(!projects) return <p>데이터 로딩중...</p>\r\n    return (\r\n        <>\r\n            <StoreButton/>\r\n            <ProjectTable projects={projects} projectRefresh={projectRefresh} totalRefresh={props.totalRefresh}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Admin;\r\n\r\nfunction StoreButton(){\r\n    return(\r\n        <Link to=\"admin/store\">\r\n            <Button style={{margin:20}} type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                게시물 추가\r\n            </Button>\r\n        </Link>\r\n    )\r\n}\r\n\r\nfunction ProjectTable(props){\r\n\r\n    const useStyles = makeStyles({\r\n        table: {\r\n          minWidth:1000,\r\n        },\r\n      });\r\n      \r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                <TableRow>\r\n                    <TableCell>게시번호</TableCell>\r\n                    <TableCell>img</TableCell>\r\n                    <TableCell>제목</TableCell>\r\n                    <TableCell>카테고리 번호</TableCell>\r\n                    <TableCell>url</TableCell>\r\n                    <TableCell>수정</TableCell>\r\n                    <TableCell>삭제</TableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {props.projects.map(row => (\r\n                    <ProjectTableBody\r\n                        key={row.id}\r\n                        id={row.id}\r\n                        title={row.title}\r\n                        category_id={row.category_id}\r\n                        img={row.img}\r\n                        url={row.url}\r\n                        projectRefresh={props.projectRefresh}\r\n                        totalRefresh={props.totalRefresh}\r\n                    />\r\n                ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n\r\nfunction ProjectTableBody(props){\r\n\r\n    return(\r\n        <TableRow>\r\n            <TableCell>{props.id}</TableCell>\r\n            <TableCell>\r\n               {props.img ? <img style={{width:50, height:50, borderRadius:3}} src={base.url+props.img} alt=\"img\"/> : <p>없음</p>} \r\n            </TableCell>\r\n            <TableCell>{props.title}</TableCell>\r\n            <TableCell>{props.category_id}</TableCell>\r\n            <TableCell>{props.url}</TableCell>\r\n            <TableCell>\r\n                <EditButton id={props.id}/>\r\n            </TableCell>\r\n            <TableCell>\r\n                <DestroyButton id={props.id} projectRefresh={props.projectRefresh} totalRefresh={props.totalRefresh}/>\r\n            </TableCell>\r\n        </TableRow>\r\n    )\r\n}\r\n\r\nfunction EditButton(props){\r\n    return(\r\n        <Link to={\"admin/edit/\"+props.id}>\r\n            <button>\r\n                수정\r\n            </button>\r\n        </Link>\r\n    )\r\n}\r\n\r\nfunction DestroyButton(props){\r\n    const clickDestroy= async () =>{\r\n        try{\r\n            await axios.delete(`${base.url}/api/projects/${props.id}`)\r\n            .then(()=>{\r\n                props.projectRefresh();\r\n                props.totalRefresh();\r\n            });\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n    return(\r\n        <button onClick={clickDestroy}>삭제</button>\r\n    )\r\n}\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport '../css/form.scss';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport * as base from '../Url';\r\n\r\nconst Login = (props) => {\r\n\r\n    const [login, setLogin] = useState({\r\n        user_id:'',\r\n        user_pw:'',\r\n        log_state:'',\r\n        log_Check:false\r\n    });\r\n\r\n    const {user_id, user_pw, log_state, log_Check} = login;\r\n\r\n    const loginAPI = async()=>{\r\n        try{\r\n            const url = `${base.url}/api/login`;\r\n            return await axios.post(url,{\r\n                user_id,\r\n                user_pw\r\n            });\r\n        }catch(e){\r\n            console.log(e);\r\n        }  \r\n    }\r\n\r\n    const submitForm = (e) =>{\r\n        e.preventDefault();\r\n        loginAPI()\r\n        .then(res=>{\r\n            if(res.data){\r\n                setLogin({\r\n                    ...login,\r\n                    log_Check:true\r\n                });\r\n                window.sessionStorage.setItem('adminInfo',res.data);\r\n                props.loginCheck(true);\r\n            }\r\n            else setLogin({\r\n                ...login,\r\n                log_state:'로그인 실패!'\r\n            })\r\n        })\r\n    }\r\n\r\n    const changeValue = (e) =>{\r\n        setLogin({\r\n            ...login,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    if(log_Check) return <Redirect to=\"/\"/>\r\n    return (\r\n        <form onSubmit={submitForm}>\r\n            <h1 className=\"formName\">관리자 로그인</h1>\r\n            <label htmlFor=\"user_id\">관리자 ID</label>\r\n            <input type=\"text\" id=\"user_id\" name=\"user_id\" value={user_id} onChange={changeValue} />\r\n            <label htmlFor=\"user_pw\">관리자 PW</label>\r\n            <input type=\"password\" id=\"user_pw\" name=\"user_pw\" value={user_pw} onChange={changeValue} />\r\n            <span className=\"log-state\">{log_state}</span>\r\n            <div className=\"button-wrap\">\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    로그인\r\n                </Button>\r\n            </div>\r\n            \r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Login;","import React, {useState} from 'react';\nimport '../css/form.scss';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport * as base from '../Url';\n\nexport default function ProjectEdit({isLogged,totalRefresh,match}){\n    const [success, setSuccess] = useState(false);\n    const [project, setProject] = useState({\n        title:'',\n        comment:'',\n        category_id:'',\n        url:'',\n        video_url:'',\n        download_url:'',\n        fileName:'',\n        file:null\n    });\n\n    const projectAdd = async () =>{\n        try{\n            const url = `${base.url}/api/projects`;\n            const formData = new FormData();\n                formData.append(\"file\", project.file);\n                formData.append(\"title\", project.title);\n                formData.append(\"comment\", project.comment);\n                formData.append(\"url\", project.url);\n                formData.append(\"video_url\", project.video_url);\n                formData.append(\"download_url\", project.download_url);\n                formData.append(\"category_id\", project.category_id);\n                const config = {\n                    headers:{\n                        'content-type':'multipart/form-data'\n                    }\n                }\n            return await axios.post(url,formData,config);\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n    const submitForm = e =>{\n        e.preventDefault();\n        projectAdd().then(()=>{\n            setSuccess(true);\n            totalRefresh();\n        });\n    }\n\n    const changeValue = e =>{\n        setProject({\n            ...project,\n            [e.target.name]:e.target.value\n        })\n    }\n\n    const changeFile =(e)=>{\n        setProject({\n            ...project,\n            file: e.target.files[0],\n            fileName: e.target.value\n        })\n    }\n\n    if(!isLogged) return <Redirect to=\"/\"/>\n    if(success) return <Redirect to=\"/admin\"/>\n    return(\n        <form onSubmit={submitForm}>\n            <h1 className=\"formName\">게시물 추가</h1>\n            <label htmlFor=\"file\">이미지 추가</label>\n            <input type=\"file\" id=\"file\" name=\"file\" file={project.file} value={project.fileName} onChange={changeFile}/>\n            <label htmlFor=\"title\">제목</label>\n            <input type=\"text\" id=\"title\" name=\"title\" value={project.title} onChange={changeValue}/>\n            <label htmlFor=\"comment\">내용</label>\n            <textarea name=\"comment\" id=\"comment\" rows=\"5\" value={project.comment} onChange={changeValue}/>\n            <label htmlFor=\"url\">URL</label>\n            <input type=\"text\" id=\"url\" name=\"url\" value={project.url} onChange={changeValue}/>\n            <label htmlFor=\"video_url\">video_URL</label>\n            <input type=\"text\" id=\"video_url\" name=\"video_url\" value={project.video_url} onChange={changeValue}/>\n            <label htmlFor=\"download_url\">download_URL</label>\n            <input type=\"text\" id=\"download_url\" name=\"download_url\" value={project.download_url} onChange={changeValue}/>\n            <label htmlFor=\"category_id\">카테고리</label>\n            <select name=\"category_id\" id=\"category_id\" value={project.category_id} onChange={changeValue}>\n                <option value=\"\">카테고리 선택</option>\n                <option value=\"1\">토이프로젝트</option>\n                <option value=\"2\">어플리케이션</option>\n                <option value=\"3\">잡동사니</option>\n            </select>\n\n            <div className=\"button-wrap\">\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    추가\n                </Button>\n            </div>\n        </form>\n    )\n}","import React, {useState, useEffect, useCallback} from 'react';\nimport '../css/form.scss';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport * as base from '../Url';\nimport { Redirect } from 'react-router-dom';\n\n\nexport default function ProjectEdit({match,totalRefresh}){\n    const [success, setSuccess] = useState(false);\n    const [project, setProject] = useState({\n        title:'',\n        created_at:'',\n        updated_at:'',\n        comment:'',\n        category_id:'',\n        url:'',\n        download_url:'',\n        fileName:'',\n        file:null\n    });\n\n    const projectFind = useCallback(async ()=>{\n        try{\n            return await axios.get(`${base.url}/api/projects/${match.params.id}`);\n        }catch(e){\n            console.log(e);\n        }  \n    },[match.params.id]);\n\n\n\n    useEffect(()=>{\n        projectFind().then(res=>{\n            const data = res.data[0];\n            console.log(data);\n            setProject((project)=>({\n                ...project,\n                title:data.title,\n                created_at:data.created_at,\n                updated_at:data.updated_at,\n                comment:data.comment,\n                category_id:data.category_id,\n                url:data.url,\n                video_url:data.video_url,\n                download_url:data.download_url,\n            }));\n        });\n    },[setProject,projectFind]);\n\n    const projectUpdate = async () =>{\n        try{\n            const url = `${base.url}/api/projects`;\n            const formData = new FormData();\n                formData.append(\"id\", match.params.id);\n                formData.append(\"file\", project.file);\n                formData.append(\"title\", project.title);\n                formData.append(\"comment\", project.comment);\n                formData.append(\"url\", project.url);\n                formData.append(\"video_url\", project.video_url);\n                formData.append(\"download_url\", project.download_url);\n                formData.append(\"category_id\", project.category_id);\n                const config = {\n                    headers:{\n                        'content-type':'multipart/form-data'\n                    }\n                }\n            return await axios.put(url,formData,config);\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n    const submitForm = e =>{\n        e.preventDefault();\n        projectUpdate().then((res)=>{\n            setSuccess(true);\n        });\n    }\n\n\n    const changeValue = (e) =>{\n        setProject({\n            ...project,\n            [e.target.name]:e.target.value\n        })\n    }\n\n    const changeFile =(e)=>{\n        setProject({\n            ...project,\n            file: e.target.files[0],\n            fileName: e.target.value\n        })\n    }\n\n\n    //if(!isLogged) return <Redirect to=\"/\"/>\n    if(success) return <Redirect to=\"/admin\"/>\n    if(!project) return <p>데이터 로딩중...</p>\n    return(\n        <form onSubmit={submitForm}>\n            <h1 className=\"formName\">게시물 수정</h1>\n            <label htmlFor=\"file\">이미지 추가</label>\n            <input type=\"file\" id=\"file\" name=\"file\" file={project.file} value={project.fileName} onChange={changeFile}/> \n            <label htmlFor=\"title\">제목</label>\n            <input type=\"text\" id=\"title\" name=\"title\" value={project.title} onChange={changeValue}/>\n            <label htmlFor=\"created_at\">생성 날짜(수정불가)</label>\n            <input type=\"text\" id=\"created_at\" value={project.created_at} readOnly/>\n            <label htmlFor=\"updated_at\">수정 날짜(수정불가)</label>\n            <input type=\"text\" id=\"updated_at\" value={project.updated_at} readOnly/>\n            <label htmlFor=\"comment\">내용</label>\n            <textarea name=\"comment\" id=\"comment\" rows=\"5\" value={project.comment} onChange={changeValue}/>\n            <label htmlFor=\"url\">URL</label>\n            <input type=\"text\" id=\"url\" name=\"url\" value={project.url} onChange={changeValue}/>\n            <label htmlFor=\"video_url\">video_URL</label>\n            <input type=\"text\" id=\"video_url\" name=\"video_url\" value={project.video_url} onChange={changeValue}/>\n            <label htmlFor=\"download_url\">download_URL</label>\n            <input type=\"text\" id=\"download_url\" name=\"download_url\" value={project.download_url} onChange={changeValue}/>\n            <label htmlFor=\"category_id\">카테고리</label>\n            <select name=\"category_id\" id=\"category_id\" value={project.category_id} onChange={changeValue}>\n                <option value=\"\">카테고리 선택</option>\n                <option value=\"1\">토이프로젝트</option>\n                <option value=\"2\">어플리케이션</option>\n                <option value=\"3\">잡동사니</option>\n            </select>\n\n            <div className=\"button-wrap\">\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    수정\n                </Button>\n            </div>\n        </form>\n    )\n}","//React or External library\nimport React,{useState, useEffect} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport axios from 'axios';\n\n//My Component\nimport Header from './pages/Header';\nimport ContentBox from './pages/ContentBox';\nimport Admin from './pages/Admin';\nimport Login from './pages/Login';\nimport ProjectStore from './pages/ProjectStore';\nimport ProjectEdit from './pages/ProjectEdit';\nimport * as base from './Url';\n\n//App Component : 최상위 컴포넌트\nfunction App(){\n\n    const [loginInfo, setLoginInfo] = useState({\n        adminInfo:'',\n        isLogged:false\n    })\n    const {adminInfo, isLogged} = loginInfo;\n\n    const [total, setTotal] = useState({\n        total:'',\n        toyTotal:'',\n        appTotal:'',\n        myTotal:''\n    });\n\n    const totalAPI = async ()=>{\n        try{\n            return await axios.get(`${base.url}/api/projects_total`);\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n    useEffect(()=>{\n        totalAPI().then(res=>{\n            const data = res.data;\n            setTotal((total)=>({\n                ...total,\n                total:data[3].count,\n                toyTotal:data[0].count,\n                appTotal:data[1].count,\n                myTotal:data[2].count\n            }));\n        });\n\n        if(sessionStorage.getItem('adminInfo')){\n            const admin = window.sessionStorage.getItem('adminInfo');\n            setLoginInfo((loginInfo)=>({\n                ...loginInfo,\n                adminInfo:admin,\n                isLogged:true\n            }));\n        }\n    },[setTotal,setLoginInfo]);\n\n    \n\n    const totalRefresh = async () =>{\n        totalAPI().then(res=>{\n            const data = res.data;\n            setTotal({\n                ...total,\n                total:data[3].count,\n                toyTotal:data[0].count,\n                appTotal:data[1].count,\n                myTotal:data[2].count\n            });\n        });\n    }\n\n    const logout = async () =>{\n        try{\n            return await axios.get(`${base.url}/api/logout`);\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n    const loginCheck = (logCheck)=>{\n        if(logCheck){\n            const admin = window.sessionStorage.getItem('adminInfo');\n            setLoginInfo({\n                ...loginInfo,\n                adminInfo:admin,\n                isLogged:true\n            });\n        }else{\n            window.sessionStorage.clear();\n            setLoginInfo({\n                ...loginInfo,\n                adminInfo:'',\n                isLogged:false\n            });\n            logout().then(res=>{\n                console.log(res.data);\n            })\n        }  \n    }\n    const toyExplanation = \n    `이 홈페이지에서 다루는 Toy Project의 의미는 홈페이지 제작과는 별개로 작은 프로젝트들을 만들어보고, \n    실력을 향상시키는데 목적이 있습니다.`;\n    const appExplanation = \n    `배운 기술등을 활용하여 만든 web Application을 분류한 페이지 입니다. \n    `;\n    const oddsExplanation = `분류되지않는 여러 게시물들을 모아둔 페이지 입니다.`;\n    const footer = '본 홈페이지는 React와 Express로 만들어졌습니다.';\n\n    return(\n        <div className=\"app\">\n            <Router>\n                <header>\n                    <Header\n                        adminInfo={adminInfo}\n                        isLogged={isLogged}\n                        loginCheck={loginCheck}\n                    />\n                </header>\n                <main>\n                    <Route exact path=\"/\">\n                        {total ? <ContentBox total={total} footer={footer}/> : <ContentBox footer={footer}/>}\n                    </Route>\n                    <Route path=\"/toy\">\n                        <ContentBox params={1} explanation={toyExplanation}/>\n                    </Route>\n                    <Route path=\"/app\">\n                        <ContentBox params={2} explanation={appExplanation}/>\n                    </Route>  \n                    <Route path=\"/odds\">\n                        <ContentBox params={3} explanation={oddsExplanation}/>\n                    </Route> \n                    <Route exact path=\"/admin\">\n                        <Admin isLogged={isLogged} totalRefresh={totalRefresh}/>\n                    </Route>\n                    <Route path=\"/admin/edit/:id\" component={ ProjectEdit } />\n                    <Route path=\"/admin/store\">\n                        <ProjectStore isLogged={isLogged} totalRefresh={totalRefresh}/>\n                    </Route>\n                    <Route path=\"/login\">\n                        <Login loginCheck = {loginCheck}/>\n                    </Route>\n                </main>\n            </Router>\n        </div>     \n    )\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}